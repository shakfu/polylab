#!/usr/bin/env python

from subprocess import check_output as shell
from os.path import join, basename

class Cutter(object):
    def __init__(self, infile, outfile=None):
        self.infile = infile
        self.outfile = basename(infile)+'.cut' if not outfile else outfile
        self.io = "{infile} {outfile}".format(infile=self.infile, outfile=self.outfile)
        self.cmd = "cut {options} {spec} "+ self.io
    
    def run(self, options, arg):
        txt = shell(self.cmd.format(options=options, spec=arg).split())
        lines = [line.strip() for line in txt.split('\n') if line]
        return lines

    def bytes(self, delimiter):
        return self.run('-d', delimiter)

    def chars(self, chars):
        return self.run('-c', chars)

    def fields(self, fields, delimiter=None):
        if not delimiter:
            return self.run('-f', fields)
        else:
            return self.run('-d {0} -f'.format(delimiter), fields)


cut = Cutter('txt')
lst  = cut.chars('3-30')

